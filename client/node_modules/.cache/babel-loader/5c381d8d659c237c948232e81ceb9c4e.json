{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bista\\\\Pictures\\\\e-coomerce-React\\\\e-commerce\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signInWithGoogle } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        'email': '',\n        'password': ''\n      });\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      'email': '',\n      'password': ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sign-in\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"I already have an account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with your email and password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"email\",\n          type: \"email\",\n          value: this.state.email,\n          handleChange: this.handleChange,\n          label: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          name: \"password\",\n          type: \"password\",\n          value: this.state.password,\n          handleChange: this.handleChange,\n          label: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttons\",\n          children: [/*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"submit\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n            type: \"button\",\n            onClick: googleSignInStart,\n            isGoogleSignIn: true,\n            children: \"Sign in with Google\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/components/sign-in/sign-in.component.jsx"],"names":["React","connect","FormInput","CustomButton","signInWithGoogle","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","e","preventDefault","setState","handleChange","value","name","target","state","render","email","password","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAAQC,gBAAR,QAA+B,+BAA/B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;;;AAEA,MAAMC,MAAN,SAAqBN,KAAK,CAACO,SAA3B,CAAoC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SASlBC,YATkB,GASFC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAC,iBAAQ,EAAT;AAAa,oBAAW;AAAxB,OAAd;AACH,KAZiB;;AAAA,SAclBC,YAdkB,GAcHH,CAAC,IAAG;AACf,YAAM;AAACI,QAAAA,KAAD;AAAQC,QAAAA;AAAR,UAAgBL,CAAC,CAACM,MAAxB;AACA,WAAKJ,QAAL,CAAc;AAAC,SAACG,IAAD,GAAQD;AAAT,OAAd;AACH,KAjBiB;;AAGd,SAAKG,KAAL,GAAW;AACP,eAAS,EADF;AAEP,kBAAY;AAFL,KAAX;AAIH;;AAYDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACd,MAAAA;AAAD,QAAsB,KAAKI,KAAjC;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAII;AAAM,QAAA,QAAQ,EAAE,KAAKC,YAArB;AAAA,gCACI,QAAC,SAAD;AACC,UAAA,IAAI,EAAC,OADN;AAEC,UAAA,IAAI,EAAC,OAFN;AAGC,UAAA,KAAK,EAAE,KAAKQ,KAAL,CAAWE,KAHnB;AAIC,UAAA,YAAY,EAAE,KAAKN,YAJpB;AAKC,UAAA,KAAK,EAAC,OALP;AAKe,UAAA,QAAQ;AALvB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI,QAAC,SAAD;AACA,UAAA,IAAI,EAAC,UADL;AAEA,UAAA,IAAI,EAAC,UAFL;AAGA,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWG,QAHlB;AAIA,UAAA,YAAY,EAAE,KAAKP,YAJnB;AAKA,UAAA,KAAK,EAAC,UALN;AAKiB,UAAA,QAAQ;AALzB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAeI;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,YAAD;AAAc,YAAA,IAAI,EAAC,QAAnB;AAA4B,YAAA,OAAO,EAAET,iBAArC;AAAwD,YAAA,cAAc,MAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA2BH;;AAlD+B;;AAqDpC,MAAMiB,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,iBAAiB,EAAE,MAAKkB,QAAQ,CAAClB,iBAAiB,EAAlB;AADI,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOqB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\nimport {signInWithGoogle} from '../../firebase/firebase.utils';\r\nimport {googleSignInStart} from '../../redux/user/user-actions';\r\n\r\nclass SignIn extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        \r\n        this.state={\r\n            'email': '',\r\n            'password': ''\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.setState({'email':'', 'password':''})\r\n    }\r\n\r\n    handleChange = e =>{\r\n        const {value, name} = e.target;\r\n        this.setState({[name] :value}) \r\n    }\r\n\r\n    render() {\r\n        const {googleSignInStart} = this.props;\r\n\r\n        return (\r\n            <div className=\"sign-in\">\r\n                <h2>I already have an account</h2>\r\n                <span>Sign in with your email and password</span>\r\n\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <FormInput\r\n                     name=\"email\"\r\n                     type=\"email\"\r\n                     value={this.state.email}\r\n                     handleChange={this.handleChange}\r\n                     label=\"email\" required\r\n                     />\r\n                    <FormInput \r\n                    name=\"password\" \r\n                    type=\"password\" \r\n                    value={this.state.password} \r\n                    handleChange={this.handleChange} \r\n                    label=\"password\" required\r\n                    />\r\n                    <div className=\"buttons\">\r\n                        <CustomButton type=\"submit\">Sign In</CustomButton> \r\n                        <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\r\n                    </div>     \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    googleSignInStart: ()=> dispatch(googleSignInStart())\r\n\r\n})\r\nexport default connect(null, mapDispatchToProps)(SignIn);\r\n"]},"metadata":{},"sourceType":"module"}