{"ast":null,"code":"import ShopTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionMap => ({\n  type: ShopTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/redux/shop/shop.actions.js"],"names":["ShopTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","catch","error","message"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AACxCC,EAAAA,IAAI,EAAEJ,SAAS,CAACK;AADwB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAGC,aAAa,KACnD;AACGH,EAAAA,IAAI,EAAEJ,SAAS,CAACQ,yBADnB;AAEGC,EAAAA,OAAO,EAAEF;AAFZ,CADmD,CAA7C;AAMP,OAAO,MAAMG,uBAAuB,GAAGC,YAAY,KAClD;AACGP,EAAAA,IAAI,EAAEJ,SAAS,CAACY,yBADnB;AAEGH,EAAAA,OAAO,EAAEE;AAFZ,CADkD,CAA5C;AAMP,OAAO,MAAME,0BAA0B,GAAG,MAAI;AAC1C,SAAOC,QAAQ,IAAG;AACd,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACZE,GADD,GAECC,IAFD,CAEMC,QAAQ,IAAI;AACd,YAAMC,cAAc,GAAGlB,+BAA+B,CAACiB,QAAD,CAAtD;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACc,cAAD,CAAxB,CAAR;AACH,KALD,EAMCC,KAND,CAMOC,KAAK,IAAGR,QAAQ,CAACJ,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CANvB;AAOH,GAXD;AAYH,CAbM","sourcesContent":["import ShopTypes from './shop.types';\r\nimport { firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: ShopTypes.FETCH_COLLECTIONS_START\r\n})\r\n\r\nexport const fetchCollectionsSuccess = collectionMap =>\r\n({\r\n    type: ShopTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionMap\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage =>\r\n({\r\n    type: ShopTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = ()=>{\r\n    return dispatch =>{\r\n        const collectionRef = firestore.collection('collections');\r\n        dispatch(fetchCollectionsStart());\r\n\r\n        collectionRef\r\n        .get()\r\n        .then(snapshot => {   \r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n            dispatch(fetchCollectionsSuccess(collectionsMap));\r\n        })\r\n        .catch(error=> dispatch(fetchCollectionsFailure(error.message)));\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}