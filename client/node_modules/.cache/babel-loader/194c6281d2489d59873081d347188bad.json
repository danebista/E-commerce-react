{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bista\\\\Pictures\\\\e-coomerce-React\\\\e-commerce\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport './shop.scss';\nimport CollectionOverview from '../../components/collections-overview/collectionsoverview.components';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CategoryPage from '../category/category.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\n_c = CollectionOverviewWithSpinner;\nconst CollectionPageWithSpinner = withSpinner(CategoryPage);\n_c2 = CollectionPageWithSpinner;\n\nclass Shop extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loading: true\n    };\n    this.unsubsribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collectionRef = firestore.collection('collections');\n    collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n      updateCollections(collectionsMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-pages\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 71\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:categoryId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageWithSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(Shop);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/pages/shop/shop.component.jsx"],"names":["React","CollectionOverview","Route","connect","CategoryPage","firestore","convertCollectionsSnapshotToMap","updateCollections","withSpinner","CollectionOverviewWithSpinner","CollectionPageWithSpinner","Shop","Component","state","loading","unsubsribeFromSnapshot","componentDidMount","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","setState","render","match","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,kBAAP,MAA+B,sEAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;;AAEA,MAAMC,6BAA6B,GAAGD,WAAW,CAACP,kBAAD,CAAjD;KAAMQ,6B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACJ,YAAD,CAA7C;MAAMM,yB;;AAEN,MAAMC,IAAN,SAAmBX,KAAK,CAACY,SAAzB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,OAAO,EAAE;AADL,KADsB;AAAA,SAK9BC,sBAL8B,GAKL,IALK;AAAA;;AAM9BC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACT,MAAAA;AAAD,QAAsB,KAAKU,KAAjC;AACA,UAAMC,aAAa,GAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB;AACAD,IAAAA,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAkB;AACvC,YAAMC,cAAc,GAAGhB,+BAA+B,CAACe,QAAD,CAAtD;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AACCf,MAAAA,iBAAiB,CAACe,cAAD,CAAjB;AAEA,WAAKG,QAAL,CAAc;AAACX,QAAAA,OAAO,EAAE;AAAV,OAAd;AACH,KAND;AAOH;;AAEDY,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACC,MAAAA;AAAD,QAAW,KAAKV,KAAtB;AACA,UAAM;AAACH,MAAAA;AAAD,QAAY,KAAKG,KAAvB;AAEA,wBACK;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACD,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAI,GAAEU,KAAK,CAACC,IAAK,EAAlC;AAAqC,QAAA,MAAM,EAAKX,KAAD,iBAAW,QAAC,6BAAD;AAA+B,UAAA,SAAS,EAAEH,OAA1C;AAAA,aAAuDG;AAAvD;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cADC,eAED,QAAC,KAAD;AAAO,QAAA,IAAI,EAAK,GAAEU,KAAK,CAACC,IAAK,cAA7B;AACA,QAAA,MAAM,EAAKX,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEH,OAAtC;AAAA,aAAmDG;AAAnD;AAAA;AAAA;AAAA;AAAA;AADrB;AAAA;AAAA;AAAA;AAAA,cAFC;AAAA;AAAA;AAAA;AAAA;AAAA,YADL;AAOH;;AA7B6B;;AAgClC,MAAMY,kBAAkB,GAAEC,QAAQ,KAAK;AACnCvB,EAAAA,iBAAiB,EAAEe,cAAc,IAAIQ,QAAQ,CAACvB,iBAAiB,CAACe,cAAD,CAAlB;AADV,CAAL,CAAlC;;AAGA,eAAenB,OAAO,CAAC,IAAD,EAAO0B,kBAAP,CAAP,CAAkClB,IAAlC,CAAf","sourcesContent":["import React from 'react';\r\nimport './shop.scss';\r\nimport CollectionOverview from '../../components/collections-overview/collectionsoverview.components';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport CategoryPage from '../category/category.component';\r\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport {updateCollections} from '../../redux/shop/shop.actions';\r\nimport withSpinner from '../../components/with-spinner/with-spinner.component';\r\n\r\nconst CollectionOverviewWithSpinner = withSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = withSpinner(CategoryPage);\r\n\r\nclass Shop extends React.Component{\r\n    state = {\r\n        loading: true\r\n    };\r\n\r\n    unsubsribeFromSnapshot = null\r\n    componentDidMount(){\r\n        const {updateCollections} = this.props;\r\n        const collectionRef = firestore.collection('collections');\r\n        collectionRef.onSnapshot(async snapshot => {\r\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n           console.log(collectionsMap)\r\n            updateCollections(collectionsMap);\r\n            \r\n            this.setState({loading: false});\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {match} =  this.props;\r\n        const {loading} = this.props;\r\n\r\n        return (\r\n             <div className='shop-pages'>\r\n            <Route exact path ={`${match.path}`} render = {(props) => <CollectionOverviewWithSpinner isLoading={loading} {...props} />} />\r\n            <Route path = {`${match.path}/:categoryId`}  \r\n            render = {(props) => <CollectionPageWithSpinner isLoading={loading} {...props} />} />\r\n        </div>\r\n        )\r\n    }\r\n} \r\n  \r\nconst mapDispatchToProps= dispatch => ({\r\n    updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\r\n})\r\nexport default connect(null, mapDispatchToProps)(Shop);\r\n"]},"metadata":{},"sourceType":"module"}