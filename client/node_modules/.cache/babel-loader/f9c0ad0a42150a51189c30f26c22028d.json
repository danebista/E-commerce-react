{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user-types';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","SignInSuccess","SignInFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","userAuth","userRef","userSnapshot","get","id","data","userSagas"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA0C,oBAA1C;AACA,SAAQC,eAAR,QAA8B,cAA9B;AACA,SAAQC,IAAR,EAAcC,cAAd,EAA8BC,yBAA9B,QAA8D,+BAA9D;AACA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACO,eAAL,CAAqBN,cAArB,CAArB;AACA,UAAMO,uBAAuB,CAACF,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMG,KAAN,EAAY;AACR,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR;AAAT,CAA1B,EAAsD;AACzD,MAAG;AACC,UAAM;AAACP,MAAAA;AAAD,QAAS,MAAMN,IAAI,CAACc,0BAAL,CAAgCF,KAAhC,EAAuCC,QAAvC,CAArB;AACA,UAAML,uBAAuB,CAACF,IAAD,CAA7B;AACH,GAHD,CAIA,OAAMG,KAAN,EAAY;AACR,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUM,mBAAV,GAA+B;AAClC,QAAMpB,UAAU,CAACI,eAAe,CAACiB,oBAAjB,EAAuCX,gBAAvC,CAAhB;AACH;AAED,OAAO,UAAUY,kBAAV,GAA8B;AACjC,QAAMtB,UAAU,CAACI,eAAe,CAACmB,mBAAjB,EAAsCR,eAAtC,CAAhB;AACH;AAED,OAAO,UAAUF,uBAAV,CAAkCW,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMtB,IAAI,CAACI,yBAAD,EAA4BiB,QAA5B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAM1B,GAAG,CAACO,aAAa,CAAC;AAACoB,MAAAA,EAAE,EAAEF,YAAY,CAACE,EAAlB;AACxB,SAAGF,YAAY,CAACG,IAAb;AADqB,KAAD,CAAd,CAAT;AAEH,GALD,CAMA,OAAMf,KAAN,EAAY;AACR,UAAMb,GAAG,CAACQ,aAAa,CAACK,KAAD,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUgB,SAAV,GAAqB;AACxB,QAAM5B,GAAG,CAAC,CACNC,IAAI,CAACiB,mBAAD,CADE,EAENjB,IAAI,CAACmB,kBAAD,CAFE,CAAD,CAAT;AAIH","sourcesContent":["import  {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport {UserActionTypes} from './user-types';\r\nimport {auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {SignInSuccess, SignInFailure} from './user-actions';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(SignInSuccess({id: userSnapshot.id,\r\n        ...userSnapshot.data() }));\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart)\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}