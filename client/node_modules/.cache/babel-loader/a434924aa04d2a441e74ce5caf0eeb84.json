{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import firebase from'firebase/app';import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyDm7Qmv_YluLVLaszBPYShEK1UTuikccDY\",authDomain:\"crwn-db-10810.firebaseapp.com\",projectId:\"crwn-db-10810\",storageBucket:\"crwn-db-10810.appspot.com\",messagingSenderId:\"16984461269\",appId:\"1:16984461269:web:4d83b2c8df435eb7c9b75c\",measurementId:\"G-9C36G8J3H4\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,snapShot,displayName,email,createdAt;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:snapShot=_context.sent;if(snapShot.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;createdAt=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,createdAt:createdAt},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();firebase.initializeApp(config);export var addCollectionAndDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionAndDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapshotToMap=function convertCollectionsSnapshotToMap(collections){var transformedCollection=collections.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollection.reduce(function(acc,collection){acc[collection.title.toLowerCase()]=collection;return acc;},{});};export var getCurrentUser=function getCurrentUser(){return new Promise(function(resolve,reject){var unsubscribe=auth.onAuthStateChanged(function(userAuth){unsubscribe();resolve(userAuth);},reject);});};export var auth=firebase.auth();export var firestore=firebase.firestore();export var googleProvider=new firebase.auth.GoogleAuthProvider();googleProvider.setCustomParameters({prompt:'select_account'});export var signInWithGoogle=function signInWithGoogle(){return auth.signInWithPopup(googleProvider);};export default firebase;","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","snapShot","exists","displayName","email","createdAt","Date","set","console","log","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","acc","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config ={\r\n        apiKey: \"AIzaSyDm7Qmv_YluLVLaszBPYShEK1UTuikccDY\",\r\n        authDomain: \"crwn-db-10810.firebaseapp.com\",\r\n        projectId: \"crwn-db-10810\",\r\n        storageBucket: \"crwn-db-10810.appspot.com\",\r\n        messagingSenderId: \"16984461269\",\r\n        appId: \"1:16984461269:web:4d83b2c8df435eb7c9b75c\",\r\n        measurementId: \"G-9C36G8J3H4\"\r\n};\r\n\r\nexport const createUserProfileDocument= async(userAuth, additionalData)=>{\r\n        if (!userAuth) return;\r\n\r\n        const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n        const snapShot = await userRef.get();\r\n        \r\n        if  (!snapShot.exists){\r\n           const {displayName, email} = userAuth;\r\n           const createdAt =  new Date();\r\n           try {\r\n                await userRef.set({\r\n                   displayName,\r\n                   email,\r\n                   createdAt,\r\n                   ...additionalData     \r\n                })\r\n                }catch(err){\r\n                        console.log('error', err.message);\r\n                }\r\n        }\r\n\r\n        return userRef;\r\n} \r\n\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const addCollectionAndDocuments= async (collectionKey, objectsToAdd) =>{\r\n  const collectionRef = firestore.collection(collectionKey);\r\n\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach(obj=>{\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit()\r\n\r\n}\r\n\r\nexport const convertCollectionsSnapshotToMap =(collections) =>{\r\n  const transformedCollection = collections.docs.map(doc=>{\r\n          const {title, items} =  doc.data();\r\n\r\n          return {\r\n                routeName: encodeURI(title.toLowerCase()),\r\n                id: doc.id,\r\n                title,\r\n                items\r\n          }\r\n  })\r\n  \r\n  return transformedCollection.reduce((acc, collection)=>{\r\n        acc[collection.title.toLowerCase()] = collection;\r\n        return acc\r\n  },{});\r\n}\r\n\r\nexport const getCurrentUser = ()=>{\r\n   return new Promise((resolve, reject) => {\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth =>{\r\n          unsubscribe();\r\n          resolve(userAuth);\r\n        }, reject)\r\n   })\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({prompt: 'select_account'});\r\nexport const signInWithGoogle = ()=> auth.signInWithPopup(googleProvider)\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}