{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(clearCartOnSignOut),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(onSignOutSuccess),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(cartSagas);import{all,takeLatest,put}from'redux-saga/effects';import{UserActionTypes}from'../user/user-types';import{clearCart}from'./card-actions';export function clearCartOnSignOut(){return _regeneratorRuntime.wrap(function clearCartOnSignOut$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return put(clearCart());case 2:case\"end\":return _context.stop();}}},_marked);}export function onSignOutSuccess(){return _regeneratorRuntime.wrap(function onSignOutSuccess$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(UserActionTypes.SIGN_OUT_SUCCESS,clearCartOnSignOut);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function cartSagas(){return _regeneratorRuntime.wrap(function cartSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([onSignOutSuccess]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/src/redux/card/card.sagas.js"],"names":["clearCartOnSignOut","onSignOutSuccess","cartSagas","all","takeLatest","put","UserActionTypes","clearCart","SIGN_OUT_SUCCESS"],"mappings":"0NAIiBA,kB,iDAIAC,gB,iDAIAC,S,EAZjB,OAAQC,GAAR,CAAaC,UAAb,CAAyBC,GAAzB,KAAmC,oBAAnC,CACA,OAAQC,eAAR,KAA8B,oBAA9B,CACA,OAAQC,SAAR,KAAwB,gBAAxB,CAEA,MAAO,SAAUP,CAAAA,kBAAV,8IACN,MAAMK,CAAAA,GAAG,CAACE,SAAS,EAAV,CAAT,CADM,sDAIP,MAAO,SAAUN,CAAAA,gBAAV,gJACH,MAAMG,CAAAA,UAAU,CAACE,eAAe,CAACE,gBAAjB,CAAmCR,kBAAnC,CAAhB,CADG,wDAIP,MAAO,SAAUE,CAAAA,SAAV,yIACH,MAAMC,CAAAA,GAAG,CAAC,CAACF,gBAAD,CAAD,CAAT,CADG","sourcesContent":["import {all, takeLatest, put} from 'redux-saga/effects';\r\nimport {UserActionTypes} from '../user/user-types'\r\nimport {clearCart} from './card-actions';\r\n\r\nexport function* clearCartOnSignOut(){\r\n yield put(clearCart());\r\n}\r\n\r\nexport function* onSignOutSuccess() {\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\r\n}\r\n\r\nexport function* cartSagas() {\r\n    yield(all([onSignOutSuccess]));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}