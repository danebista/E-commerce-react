{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user-types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/client/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","userAuth","additionalData","userRef","userSnapshot","get","id","data","signOut","signUp","displayName","createUserWithEmailAndPassword","onSignOutStart","SIGN_OUT_START","onSignUpStart","SIGN_UP_START","signInAfterSignUp","onSignUpSuccess","SIGN_UP_SUCCESS","userSagas"],"mappings":"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","sourcesContent":["import  {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport {UserActionTypes} from './user-types';\r\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {SignInSuccess, SignInFailure, signOutSuccess, signOutFailure,\r\nsignUpSuccess, signUpFailure} from './user-actions';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n try{\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n } catch(error){\r\n     yield put(SignInFailure(error))\r\n }   \r\n}\r\nexport function* getSnapshotFromUserAuth(userAuth, additionalData){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(SignInSuccess({id: userSnapshot.id,\r\n        ...userSnapshot.data() }));\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()));\r\n    }catch(error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signUp({payload:{email, password, displayName}}){\r\n    try{\r\n        const {user} = yield auth.createUserWithEmailAndPassword(\r\n           email, \r\n           password \r\n        );\r\n        yield put(signUpSuccess({user, additionalData: {displayName} }));\r\n\r\n    }catch(error){\r\n        put(signUpFailure(error))\r\n    }\r\n}\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut)\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START, signUp)\r\n}\r\n\r\nexport function* signInAfterSignUp({payload:{user, additionalData}}){\r\n    yield getSnapshotFromUserAuth(user, additionalData);\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\r\n}\r\n\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart),\r\n        call(onSignUpStart),\r\n        call(onSignUpSuccess)\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}