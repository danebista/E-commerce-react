{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bista\\\\Pictures\\\\e-coomerce-React\\\\e-commerce\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport { connect } from 'react-redux';\nimport './sign-up.scss';\nimport { signUpStart } from '../../redux/user/user-actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [userSignUpCreds, setUserSignUpCreds] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userSignUpCreds;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      console.log('Passwords donot match');\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserSignUpCreds({ ...userSignUpCreds,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"I do not have an account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign up with your email and password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"sign-up-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"displayName\",\n        value: displayName,\n        onChange: handleChange,\n        label: \"Display name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"email\",\n        name: \"email\",\n        value: email,\n        onChange: handleChange,\n        label: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"password\",\n        value: password,\n        onChange: handleChange,\n        label: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"password\",\n        name: \"confirmPassword\",\n        value: confirmPassword,\n        onChange: handleChange,\n        label: \"Confirm Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CustomButton, {\n        type: \"submit\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"jTdAsF92EzPGFsXCuhO2eavyc34=\");\n\n_c = SignUp;\n\nmapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","connect","signUpStart","SignUp","userSignUpCreds","setUserSignUpCreds","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","console","log","handleChange","name","value","target","mapDispatchToProps","dispatch","userCredentials"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAAQC,IAAR,EAAcC,yBAAd,QAA8C,+BAA9C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,gBAAP;AACA,SAAQC,WAAR,QAA0B,+BAA1B;;;AAEA,MAAMC,MAAM,GAAC,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAkB;AAAA;;AAE3B,QAAM,CAACE,eAAD,EAAkBC,kBAAlB,IAAuCT,QAAQ,CAAC;AAACU,IAAAA,WAAW,EAAC,EAAb;AACtDC,IAAAA,KAAK,EAAC,EADgD;AAEtDC,IAAAA,QAAQ,EAAC,EAF6C;AAGtDC,IAAAA,eAAe,EAAC;AAHsC,GAAD,CAArD;AAKA,QAAM;AAACH,IAAAA,WAAD;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,QAArB;AAA+BC,IAAAA;AAA/B,MAAkDL,eAAxD;;AAEA,QAAMM,YAAY,GAAE,MAAMC,KAAN,IAAa;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAGA,QAAIJ,QAAQ,KAAKC,eAAjB,EAAiC;AAC7BI,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA;AACH;;AAEDZ,IAAAA,WAAW,CAAC;AAACI,MAAAA,WAAD;AAAcC,MAAAA,KAAd;AAAqBC,MAAAA;AAArB,KAAD,CAAX;AAEH,GAZD;;AAcA,QAAMO,YAAY,GAAEJ,KAAK,IAAG;AACxB,UAAM;AAACK,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBN,KAAK,CAACO,MAA5B;AACAb,IAAAA,kBAAkB,CAAC,EAAC,GAAGD,eAAJ;AAAqB,OAACY,IAAD,GAAOC;AAA5B,KAAD,CAAlB;AACH,GAHD;;AAKI,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAOI;AAAM,MAAA,SAAS,EAAC,cAAhB;AAA+B,MAAA,QAAQ,EAAIP,YAA3C;AAAA,8BACI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,MADL;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,KAAK,EAAIJ,WAHT;AAIA,QAAA,QAAQ,EAAES,YAJV;AAKA,QAAA,KAAK,EAAC,cALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,OADL;AAEA,QAAA,IAAI,EAAC,OAFL;AAGA,QAAA,KAAK,EAAIR,KAHT;AAIA,QAAA,QAAQ,EAAEQ,YAJV;AAKA,QAAA,KAAK,EAAC,OALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cAVJ,eAmBI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,UAFL;AAGA,QAAA,KAAK,EAAIP,QAHT;AAIA,QAAA,QAAQ,EAAEO,YAJV;AAKA,QAAA,KAAK,EAAC,UALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cAnBJ,eA4BI,QAAC,SAAD;AACA,QAAA,IAAI,EAAC,UADL;AAEA,QAAA,IAAI,EAAC,iBAFL;AAGA,QAAA,KAAK,EAAIN,eAHT;AAIA,QAAA,QAAQ,EAAEM,YAJV;AAKA,QAAA,KAAK,EAAC,kBALN;AAMA,QAAA,QAAQ;AANR;AAAA;AAAA;AAAA;AAAA,cA5BJ,eAoCG,QAAC,YAAD;AAAc,QAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCH;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiDP,CA7ED;;GAAMZ,M;;KAAAA,M;;AA+ENgB,kBAAkB,GAAGC,QAAQ,KAAK;AAC9BlB,EAAAA,WAAW,EAAEmB,eAAe,IAAID,QAAQ,CAAClB,WAAW,CAACmB,eAAD,CAAZ;AADV,CAAL,CAA7B;;AAIA,eAAepB,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkChB,MAAlC,CAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button.component';\r\n\r\nimport {auth, createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport './sign-up.scss';\r\nimport {signUpStart} from '../../redux/user/user-actions'\r\n\r\nconst SignUp=({signUpStart})=> {\r\n  \r\n    const [userSignUpCreds, setUserSignUpCreds]= useState({displayName:'',\r\n    email:'',\r\n    password:'',\r\n    confirmPassword:''})\r\n      \r\n    const {displayName, email, password, confirmPassword} = userSignUpCreds;\r\n \r\n    const handleSubmit= async event=>{\r\n        event.preventDefault();\r\n      \r\n\r\n        if (password !== confirmPassword){\r\n            console.log('Passwords donot match')\r\n\r\n            return;\r\n        }\r\n\r\n        signUpStart({displayName, email, password})\r\n        \r\n    }\r\n\r\n    const handleChange= event =>{\r\n        const {name, value} = event.target;\r\n        setUserSignUpCreds({...userSignUpCreds, [name]:value});\r\n    }\r\n\r\n        return (\r\n            <div className=\"sign-up\">\r\n                <h2 className='title'>\r\n                    I do not have an account\r\n                </h2>\r\n                <span>\r\n                    Sign up with your email and password \r\n                </span>\r\n                <form className=\"sign-up-form\" onSubmit = {handleSubmit}>\r\n                    <FormInput\r\n                    type=\"text\"\r\n                    name=\"displayName\"\r\n                    value = {displayName}\r\n                    onChange={handleChange}\r\n                    label='Display name'\r\n                    required \r\n                    />\r\n\r\n                    <FormInput\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    value = {email}\r\n                    onChange={handleChange}\r\n                    label='Email'\r\n                    required \r\n                    />\r\n\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value = {password}\r\n                    onChange={handleChange}\r\n                    label='Password'\r\n                    required \r\n                    />\r\n\r\n                    <FormInput\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value = {confirmPassword}\r\n                    onChange={handleChange}\r\n                    label='Confirm Password'\r\n                    required \r\n                    />\r\n                   <CustomButton type=\"submit\">SIGN UP</CustomButton>\r\n                    \r\n                </form>\r\n            </div>\r\n        )\r\n}\r\n\r\nmapDispatchToProps = dispatch => ({\r\n    signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\r\n})\r\n\r\nexport default connect(null, mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}