{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user-types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { SignInSuccess, SignInFailure, signOutSuccess, signOutFailure } from './user-actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(SignInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(SignInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/Users/bista/Pictures/e-coomerce-React/e-commerce/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","SignInSuccess","SignInFailure","signOutSuccess","signOutFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","isUserAuthenticated","userAuth","userRef","userSnapshot","get","id","data","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import  {takeLatest, put, all, call} from 'redux-saga/effects';\r\nimport {UserActionTypes} from './user-types';\r\nimport {auth, googleProvider, createUserProfileDocument, getCurrentUser} from '../../firebase/firebase.utils';\r\nimport {SignInSuccess, SignInFailure, signOutSuccess, signOutFailure} from './user-actions';\r\n\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const {user} = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email, password}}){\r\n    try{\r\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated);\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n try{\r\n    const userAuth = yield getCurrentUser();\r\n    if (!userAuth) return;\r\n    yield getSnapshotFromUserAuth(userAuth);\r\n } catch(error){\r\n     yield put(SignInFailure(error))\r\n }   \r\n}\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument, userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(SignInSuccess({id: userSnapshot.id,\r\n        ...userSnapshot.data() }));\r\n    }\r\n    catch(error){\r\n        yield put(SignInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()));\r\n    }catch(error){\r\n        yield put(signOutFailure(error));\r\n    }\r\n}\r\nexport function* onSignOutStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_OUT_START)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([\r\n        call(onGoogleSignInStart),\r\n        call(onEmailSignInStart),\r\n        call(isUserAuthenticated),\r\n        call(onSignOutStart)\r\n    ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}